***********************************Assignment-Day5*********************************
Q1)Do the below programs in anonymous function & IIFE
1.Print odd numbers in an array
2.Convert all the strings to title caps in a string array
3.Sum of all numbers in an array
4.Return all the prime numbers in an array
5.Return all the palindromes in an array
6.Return median of two sorted arrays of same size
7.Remove duplicates from an array
8.Rotate an array by k times

1.Program to print odd numbers in an array
 
Program
*******
let arr = [1,2,3,4,5,6,7,8,9,10,11,12]

let odds = arr.filter(n => n%2)

console.log(odds)

Output
[1,3,5,7,9,11]

2.Covert all the strings to title caps in a string array

Program
*******

function titleCase(str) {
    return str.split(' ') .map((word) => word[0].toUpperCase() + word.slice(1).toLowerCase())
        .join(' '); 
}
console.log(titleCase("Jahnavi"));

Output
Jahnavi

3.A Program to find sum of all numbers in an array

Program
*********
var array = [1, 2, 3, 4, 5];
    
    // Getting sum of numbers
    var sum = array.reduce(function(a, b){
        return a + b;
    }, 0);

    
    console.log(sum);
Output
15

4.Return all the prime numbers in an array

Program
********
const arr = [43, 6, 6, 5, 54, 81, 71, 56, 8, 877, 4, 4];
const isPrime = n => {
   if (n===1){
      return false;
   }else if(n === 2){
      return true;
   }else{
      for(let x = 2; x < n; x++){
         if(n % x === 0){
            return false;
         }
      }
      return true;
   };
};
const primeSum = arr => {
   let sum = 0;
   for(let i = 0; i < arr.length; i++){
      if(!isPrime(arr[i])){
         continue;
      };
      sum += arr[i];
   };
   return sum;
};
console.log(primeSum(arr))

output
996

5.Return all the pallindromes in an array

Program
********
function palindrome(str) {

    var len = str.length;
    var mid = Math.floor(len/2);

    for ( var i = 0; i < mid; i++ ) {
        if (str[i] !== str[len - 1 - i]) {
            return false;
        }
    }

    return true;
}
Output
343, 111


6.Return median of two sorted arrays of same size
Program
*******
function getMedian(ar1, ar2, n)
{
    var i = 0; /* Current index of i/p array ar1[] */
    var j = 0; /* Current index of i/p array ar2[] */
    var count;
    var m1 = -1, m2 = -1;
 
    /* Since there are 2n elements, median will be average
    of elements at index n-1 and n in the array obtained after
    merging ar1 and ar2 */
    for (count = 0; count <= n; count++)
    {
        /*Below is to handle case where all elements of ar1[] are
        smaller than smallest(or first) element of ar2[]*/
        if (i == n)
        {
            m1 = m2;
            m2 = ar2[0];
            break;
        }
 
        /*Below is to handle case where all elements of ar2[] are
        smaller than smallest(or first) element of ar1[]*/
        else if (j == n)
        {
            m1 = m2;
            m2 = ar1[0];
            break;
        }
        /* equals sign because if two
            arrays have some common elements */
        if (ar1[i] <= ar2[j])
        {
            m1 = m2; /* Store the prev median */
            m2 = ar1[i];
            i++;
        }
        else
        {
            m1 = m2; /* Store the prev median */
            m2 = ar2[j];
            j++;
        }
    }
 
    return (m1 + m2)/2;
}
 
/* Driver program to test above function */
var ar1 = [1, 12, 15, 26, 38];
var ar2 = [2, 13, 17, 30, 45];
var n1 = ar1.length;
var n2 = ar2.length;
if (n1 == n2)
    document.write("Median is "+ getMedian(ar1, ar2, n1));
else
    document.write("Doesn't work for arrays of unequal size");
 
</script>

Output'
16 
After Merging two arrays[1,2, 12 , 13, 15, 17, 26, 30, 38,45]
Middle of two elements 15 and 17
Average of middle elements (15+17)/2=16

7.Remove duplicates from an array
Program
*******
let chars = ['A', 'B', 'A', 'C', 'B'];

let uniqueChars = chars.filter((c, index) => {
    return chars.indexOf(c) === index;
});

console.log(uniqueChars);

Output
*****
(3)Â ['A', 'B', 'C']

8.Rotate an array by k times
Program
***********
function rotateArray(A, K) {
    if (!A.length) return A;
    let index = -1;
    while (++index < K) {
        A.unshift(A.pop());
    }
    return A;
}

[
    rotateArray([3, 8, 9, 7, 6], 3),
    rotateArray([0, 0, 0], 1),
    rotateArray([1, 2, 3, 4], 4),
    rotateArray([], 4),
].join(' | ');

Output

'9,7,6,3,8 | 0,0,0 | 1,2,3,4 | '







Q2)Do the below programs in arrow functions
1.Print odd numbers in an array
2.Convert all the strings to title caps in a string array
3.Sum of all numbers in an array
4.Return all the prime numbers in an array
5.Return all the palindromes in an array


1.Print odd numbers in an array using arrow function

Program
********
let arr = [1,2,3,4,5,6,7,8,9,10,11,12]

let odds = arr.filter(n => n%2)

console.log(odds)
Output
[
    1,
    3,
    5,
    7,
    9,
    11
]

2.Convert all the strings to title caps in a string array
Program
*********var str = "foo bar baz"

console.log(

str.split(' ')
   .map(w => w[0].toUpperCase() + w.substr(1).toLowerCase())
   .join(' ')

)
Output
Foo Bar Baz

3.Sum of all numbers in an array '
Program
*****
[1, 2, 3, 4].reduce((a, b) => a + b, 0)
Output
10

4.Return all the prime numbers in an  array using arrow function
Program
************
const newArray = [1, 3, 2, 5, 10];
const isPrime = num => {
  for (let i = 2; i < num; i++) {
    if (num % i === 0) return false;
  }
  return num !== 1;
};


const myPrimeArray = newArray.filter(element => isPrime(element));
console.log(myPrimeArray);
Output
[3,2,5]

5.Return all the palindromes in an array
Program
*******
const getAllPalindromes = (words) => {
 return words.filter((word) => {
  word.split("").reverse().join("") === word;
  });
};

console.log(getAllPalindromes(["hello", "noon"]));
Output
[noon]


